[{"/Users/joshtan/Dev/Web/grisinne/src/index.js":"1","/Users/joshtan/Dev/Web/grisinne/src/App.js":"2","/Users/joshtan/Dev/Web/grisinne/src/reportWebVitals.js":"3","/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Bord.jsx":"4","/Users/joshtan/Dev/Web/grisinne/src/components/headerComp/Header.jsx":"5","/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Cards.jsx":"6","/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Card.jsx":"7","/Users/joshtan/Dev/Web/grisinne/src/components/modalComp/Modal.jsx":"8"},{"size":472,"mtime":1613918212421,"results":"9","hashOfConfig":"10"},{"size":2593,"mtime":1614012902179,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611684850492,"results":"12","hashOfConfig":"10"},{"size":197,"mtime":1614003727897,"results":"13","hashOfConfig":"10"},{"size":355,"mtime":1614012885330,"results":"14","hashOfConfig":"10"},{"size":260,"mtime":1614003697935,"results":"15","hashOfConfig":"10"},{"size":720,"mtime":1614003662630,"results":"16","hashOfConfig":"10"},{"size":398,"mtime":1613918212420,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1illjrm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/joshtan/Dev/Web/grisinne/src/index.js",[],["37","38"],"/Users/joshtan/Dev/Web/grisinne/src/App.js",["39"],"import './Assets/css/default.min.css'\nimport Header from './components/headerComp/Header.jsx'\nimport Bord from './components/boardComp/Bord.jsx'\nimport Modal from './components/modalComp/Modal.jsx'\nimport { useState } from 'react'\nimport data from './data.json'\n\nfunction App() {\n  const [showHint, setShowHint] = useState(false)\n  const [charHint, setCharHint] = useState('')\n  const [charCurr, setCharCurr] = useState('')\n  const [modalState, setModalState] = useState(false)\n\n  const toggleModalState = () => {\n    setModalState(!modalState)\n    console.log(modalState)\n  }\n\n  const toggleHint = (id) => {\n    // if (showHint === false) {\n    //   setShowHint(true)\n    // }\n    data.map((zhuyin) => {\n      if (zhuyin.id === id) {\n        setCharHint(zhuyin.hint)\n        setCharCurr(zhuyin.char)\n      }\n    })\n  }\n\n  const hintInfo = () => {\n    if (charCurr === '') return 'Click a CHAR for pronunciation'\n\n    return (\n      <p>\n        Char: <b>{charCurr}</b> , hover for hint\n      </p>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n      <Header onModal={toggleModalState} />\n      <Modal open={modalState} toggleOpen={toggleModalState}>\n        <div className=\"modalInner\">\n          <div className=\"modalImage\">\n            <img\n              src=\"https://images.unsplash.com/photo-1613920175775-9418eda8cd59?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=634&q=80\"\n              alt=\"pic\"\n            />\n          </div>\n          <div className=\"modalText\">\n            <button className=\"exitButton\" onClick={() => toggleModalState()}>\n              X\n            </button>\n            <h2>About</h2>\n            <p>\n              This is a tool to help you learn zhuyin. Associating the chars\n              with a hint helps me to remember and I hope it will help you too!\n              For the sound of the chars, check youtube for zhuyin...\n              <br />\n              Upcoming feature <br /> Implementation of sound.\n            </p>\n            <a\n              className=\"git-button\"\n              href=\"https://www.github.com/joshtn/grisinne\"\n            >\n              Github Repo\n            </a>\n          </div>\n        </div>\n      </Modal>\n\n      <div\n        className=\"hint-toggle\"\n        onClick={() => setShowHint(!showHint)}\n        onMouseEnter={() => setShowHint(true)}\n        onMouseLeave={() => setShowHint(false)}\n      >\n        {hintInfo()}\n      </div>\n      {showHint && <div className=\"hint\">{charHint}</div>}\n      <Bord data={data} onHint={toggleHint} />\n    </div>\n  )\n}\n\nexport default App\n","/Users/joshtan/Dev/Web/grisinne/src/reportWebVitals.js",[],"/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Bord.jsx",[],"/Users/joshtan/Dev/Web/grisinne/src/components/headerComp/Header.jsx",["40"],"const Header = ({ onModal }) => {\n    return (\n        <header className='header'>\n            <div className='container'>\n                <h3 className='logo'>Grisinne - Zhuyin</h3>\n                <ul>\n                     <li><a onClick={onModal}>About</a></li>\n                </ul>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Cards.jsx",[],"/Users/joshtan/Dev/Web/grisinne/src/components/boardComp/Card.jsx",[],"/Users/joshtan/Dev/Web/grisinne/src/components/modalComp/Modal.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":23,"column":23,"nodeType":"47","messageId":"48","endLine":23,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":7,"column":26,"nodeType":"51","endLine":7,"endColumn":47},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]